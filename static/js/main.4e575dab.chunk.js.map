{"version":3,"sources":["pages/game/style.module.scss","assets/bg/bunny-155674_640.png","assets/bg/smiley-821993_640.jpg","pages/game/StartModal.js","pages/game/EndModal.js","pages/game/ScoreUnit.js","pages/game/Card.js","pages/game/game.images.js","pages/game/game.service.js","pages/game/game.reducer.js","pages/game/Game.js","App.js","index.js"],"names":["module","exports","StartPage","props","handleStart","className","styles","startPage","inner","flipped","flapped","instruction","speechPointer","imgContainer","src","instructorImg","alt","startGame","onClick","EndModal","endModuleInner","startBtn","ScoreUnit","title","value","scoreUnit","scoreUnitName","scoreUnitVal","Card","card","onFlip","box","clsx","boxInner","isFlipped","isDone","cardFace","cardFaceFront","qImg","cardFaceBack","gameImg","imgUrl","getInitialCards","imgList","images","length","i","Math","floor","random","splice","doubleList","j","k","temp","map","img","id","cardsReducer","state","action","type","index","payload","newCards","Error","Game","useReducer","cards","dispatch","useState","screen","setScreen","allClicks","setAllClicks","repeatClicks","setRepeatClicks","matchFound","setMatchFound","e","isMatch","markAsDone","markFlipped","setTimeout","pageHeader","scores","boxContainer","c","key","includes","clicks","console","log","isNaN","flipCard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e575dab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"style_pageHeader__11k6E\",\"zigzag\":\"style_zigzag__3OTI7\",\"scores\":\"style_scores__1dWw7\",\"scoreUnit\":\"style_scoreUnit__1FtiH\",\"scoreUnitName\":\"style_scoreUnitName__22oXh\",\"scoreUnitVal\":\"style_scoreUnitVal__3Wj2h\",\"boxContainer\":\"style_boxContainer__2Y7VZ\",\"box\":\"style_box__3yMNS\",\"boxInner\":\"style_boxInner__2S_Bp\",\"cardFace\":\"style_cardFace__2_2Q8\",\"cardFaceFront\":\"style_cardFaceFront__d8P2a\",\"cardFaceBack\":\"style_cardFaceBack__ytQ6w\",\"gameImg\":\"style_gameImg__3rJ4P\",\"isFlipped\":\"style_isFlipped__3pQCQ\",\"startPage\":\"style_startPage__35ZPv\",\"inner\":\"style_inner__2z6vI\",\"flipped\":\"style_flipped__1xdg1\",\"flipflap\":\"style_flipflap__1y847\",\"flapped\":\"style_flapped__bTZvx\",\"instruction\":\"style_instruction__2geXJ\",\"speechPointer\":\"style_speechPointer__3UU1V\",\"imgContainer\":\"style_imgContainer__EZXp7\",\"instructorImg\":\"style_instructorImg__3Frni\",\"startGame\":\"style_startGame__3pQil\",\"endModuleInner\":\"style_endModuleInner__3kYeq\",\"startBtn\":\"style_startBtn__4O3DR\"};","module.exports = __webpack_public_path__ + \"static/media/bunny-155674_640.e4834f77.png\";","module.exports = __webpack_public_path__ + \"static/media/smiley-821993_640.da4e19c0.jpg\";","import React from 'react'\r\nimport styles from './style.module.scss'\r\nimport instructorImg from '../../assets/bg/bunny-155674_640.png'\r\n\r\nconst StartPage = props => {\r\n    const { handleStart } = props\r\n    return (\r\n        <div className={styles.startPage}>\r\n            <div className={styles.inner}>\r\n                <h1>\r\n                    <span className={styles.flipped}>Flip</span>\r\n                    <span className={styles.flapped}>Flap</span>\r\n                </h1>\r\n                \r\n                <p className={styles.instruction}>\r\n                    Hey buddy, can you find all the matching pair of images with minimum number of clicks? Remember, each card is hiding an image. Whenever you click any card, it will show you the image.\r\n                    <br/>\r\n                    Good Luck !!!\r\n\r\n                    <span className={styles.speechPointer}>&#x25BC;</span>\r\n                </p>\r\n                <div className={styles.imgContainer}>\r\n                    <img src={instructorImg} \r\n                        alt=\"funny instructor\" \r\n                        className={styles.instructorImg} />\r\n\r\n                        <span \r\n                            className={styles.startGame}\r\n                            onClick={handleStart}\r\n                        >&#10140;</span>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPage\r\n","import React from 'react'\r\nimport styles from './style.module.scss'\r\n\r\nconst EndModal = props => {\r\n    const { handleStart } = props\r\n    return (\r\n        <div className={styles.startPage}>\r\n            <div className={styles.endModuleInner}>\r\n                <h1> &#x2746; Congratulations  &#x2746;</h1>\r\n                <h2>You Got 'Em All</h2>\r\n                <span className={styles.startBtn} onClick={handleStart}>Play Again</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndModal","import React from 'react'\r\nimport styles from './style.module.scss'\r\n\r\nconst ScoreUnit = props => {\r\n    const { title, value } = props\r\n\r\n    return (\r\n        <div className={styles.scoreUnit}>\r\n            <div className={styles.scoreUnitName}>{title}</div>\r\n            <div className={styles.scoreUnitVal}>{value}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreUnit","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport styles from './style.module.scss'\r\n// import qImg from '../../assets/bg/faq-685060_640.jpg'\r\nimport qImg from '../../assets/bg/smiley-821993_640.jpg'\r\n\r\nconst Card = props => {\r\n    const { card, onFlip } = props\r\n    return (\r\n        <div className={styles.box}>\r\n            <div\r\n                className={clsx(styles.boxInner, (card.isFlipped || card.isDone) && styles.isFlipped)}\r\n                onClick={onFlip}\r\n            >\r\n                <div className={clsx(styles.cardFace, styles.cardFaceFront)}>\r\n                    {/* <span className={styles.fftxt}>?</span> */}\r\n                    {/* <img alt=\"Question Mark\" src=\"assets/bg/faq-685060_640.jpg\" /> */}\r\n                    <img alt=\"Question Mark\" src={qImg} />\r\n                </div>\r\n\r\n                <div className={clsx(styles.cardFace, styles.cardFaceBack)}>\r\n                    <img className={styles.gameImg} src={card.imgUrl} alt=\"random reference\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","export default {\r\n    root: 'assets/img',\r\n    list: [\r\n        '1.jpg',\r\n        '2.jpg',\r\n        '3.jfif',\r\n        '4.jfif',\r\n        '5.jfif',\r\n        '6.jfif',\r\n        '7.jfif',\r\n        '8.jfif',\r\n        '9.jfif',\r\n        '10.jfif',\r\n        '11.jpg',\r\n        '12.jpeg',\r\n        '13.jfif',\r\n        '14.jfif',\r\n        '15.jfif',\r\n        '16.jfif',\r\n        '17.jpg',\r\n        '18.jfif',\r\n        '19.jfif',\r\n        '20.png',\r\n        '21.png',\r\n        '22.jfif',\r\n        '23.jfif',\r\n        '24.jfif',\r\n        '25.jfif',\r\n        '26.jpg',\r\n        '27.jpg',\r\n        '28.png',\r\n        '29.jpg',\r\n        '30.jfif',\r\n        '31.jfif',\r\n        '32.jfif',\r\n        '33.jfif'\r\n    ]\r\n}","import images from './game.images'\r\n\r\n/**\r\n * Prepares and returns an array of 16 card objects\r\n * Each card object will be a JSON of structure\r\n * {\r\n        id: Integer,\r\n        imgUrl: String,\r\n        isFlipped: Boolean\r\n * }\r\n * \r\n * But these 16 cards will point to 8 unique image URLs,\r\n * That means, a pair of cards will point to each unique image \r\n * And thus, 8 pairs = 16 cards\r\n */\r\nexport const getInitialCards = () => {\r\n    let imgList = [...images.list]\r\n\r\n    // Let's randomly pick 8 images\r\n    // as we are going to have 16 cards, so 8 pair 8 = 16\r\n    while (imgList.length > 8) {\r\n        let i = Math.floor(Math.random() * imgList.length)  // pick a random index\r\n        imgList.splice(i, 1)    // remove that index\r\n    }\r\n\r\n    // console.log(imgList)\r\n\r\n    let doubleList = [...imgList, ...imgList]\r\n\r\n    // console.log(doubleList)\r\n\r\n    // Shuffle the list 100 times\r\n    for (let i = 0; i < 1000; i++) {\r\n        let j = Math.floor(Math.random() * doubleList.length)\r\n        let k = Math.floor(Math.random() * doubleList.length)\r\n\r\n        // swap if not equal\r\n        if (j !== k) {\r\n            let temp = doubleList[j]\r\n            doubleList[j] = doubleList[k]\r\n            doubleList[k] = temp\r\n        }\r\n    }\r\n\r\n    // console.log(doubleList)\r\n\r\n    let newCards = doubleList.map((img, i) => ({\r\n        id: i,\r\n        imgUrl: `${images.root}/${img}`,\r\n        isFlipped: false\r\n    }))\r\n\r\n    return newCards\r\n}","import { getInitialCards } from './game.service'\r\n\r\n// ACTION TYPES\r\nexport const MARK_AS_DONE = 'MARK_AS_DONE'\r\nexport const MARK_AS_FLIPPED = 'MARK_AS_FLIPPED'\r\nexport const INIT_GAME_STATE = 'INIT_GAME_STATE'\r\n\r\n\r\n/**\r\n * Just like a Redux reducer, \r\n * only difference between reducers of useReducer hook and redux are that\r\n * \r\n * 1. In case of useReducer hook's reducer, we dont specify the state=initialState\r\n * in the reducer function definition default param. Rather supply/control it from\r\n * the useReducer hook, as in, useReducer(reducerFn, initialState)\r\n * \r\n *  2. The default switch case of action.type, in case of useReducer hook's \r\n * reducer function throws an error instead of returning the default state\r\n * \r\n * @param {Object} state | An array of Cards, for cards structure, see game.service.js\r\n * @param {*} action | Normal redux action i.e. { type, payload }\r\n */\r\nexport const cardsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case MARK_AS_DONE: {\r\n            const { index } = action.payload\r\n            let newCards = [...state]\r\n            newCards[index] = {\r\n                ...newCards[index],\r\n                isDone: true\r\n            }\r\n            return newCards\r\n        }\r\n        case MARK_AS_FLIPPED: {\r\n            const { index, isFlipped } = action.payload\r\n            let newCards = [...state]\r\n            newCards[index] = {\r\n                ...newCards[index],\r\n                isFlipped\r\n            }\r\n            return newCards\r\n        }\r\n        case INIT_GAME_STATE: {\r\n            return getInitialCards()\r\n        }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, { useState, useReducer } from 'react'\r\nimport styles from './style.module.scss'\r\nimport StartPage from './StartModal'\r\nimport EndModal from './EndModal'\r\nimport ScoreUnit from './ScoreUnit'\r\nimport Card from './Card'\r\nimport { getInitialCards } from './game.service'\r\nimport { cardsReducer, MARK_AS_DONE, MARK_AS_FLIPPED, INIT_GAME_STATE } from './game.reducer'\r\n\r\nconst getInitialState = () => {\r\n    return getInitialCards()\r\n}\r\n\r\nconst Game = props => {\r\n    const [cards, dispatch] = useReducer(cardsReducer, getInitialState())\r\n\r\n    const [screen, setScreen] = useState('START')   // 'START' / 'GAME' / 'END'\r\n    const [allClicks, setAllClicks] = useState([])  // Array of all the Cards Indices that user clicks\r\n    const [repeatClicks, setRepeatClicks] = useState(0) // A Nunber representing Repeat clicks on cards\r\n    const [matchFound, setMatchFound] = useState(0) // Number of matches so far\r\n\r\n    const flipCard = i => {\r\n        // if it is a Done card, do nothing\r\n        // if already flipped. do nothing\r\n        if (cards[i].isDone || cards[i].isFlipped) return\r\n\r\n        // Check if it is a repeat click\r\n        if(allClicks.includes(i)) setRepeatClicks(repeatClicks + 1)\r\n\r\n        // Record this click index, [to be tallied with future/next click index]\r\n        let clicks = [...allClicks, i]\r\n        setAllClicks(clicks)\r\n        // clicks.push(i)\r\n        console.log('click no. ', clicks.length)\r\n\r\n        //Check with prev Index, is it a match ?\r\n        let j = clicks[clicks.length - 2]   //1st time it will try to read index -1\r\n        if (!isNaN(j) && isMatch(i, j)) {\r\n            // Mark them as done\r\n            markAsDone(i)\r\n            markAsDone(j)\r\n            console.log('Found 1 ...')\r\n            setMatchFound(matchFound + 1)\r\n\r\n            // ALL 8 MATCHES FOUND\r\n            if( (matchFound + 1) === 8) {\r\n                setScreen('END')\r\n            }\r\n        }\r\n        else {\r\n            markFlipped(i, true)\r\n            console.log('Nope ...')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function will initialize everything \r\n     * and start / restart the game\r\n     * @param {*} e \r\n     */\r\n    const startGame = e => {\r\n        dispatch({ type: INIT_GAME_STATE })\r\n        setAllClicks([])\r\n        setRepeatClicks(0)\r\n        setMatchFound(0)\r\n        setScreen('GAME')\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Int} i | \r\n     * @param {Int} j \r\n     */\r\n    const isMatch = (i, j) => cards[i].imgUrl === cards[j].imgUrl\r\n\r\n    const markAsDone = i => {\r\n        dispatch({type: MARK_AS_DONE, payload: {index: i}})\r\n    }\r\n\r\n    /**\r\n     * Whatever isFlipped will get auto unflipped after certain period\r\n     * @param {int} i | index\r\n     */\r\n    const markFlipped = (i, isFlipped = false) => {\r\n        dispatch({ \r\n            type: MARK_AS_FLIPPED, \r\n            payload: {\r\n                index: i,\r\n                isFlipped\r\n            }\r\n        })\r\n\r\n        // autoUnFlip after 1 sec\r\n        if (isFlipped) {\r\n            setTimeout(() => markFlipped(i), 3000)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={styles.pageHeader}>Flip / Flap</h2>\r\n            \r\n            <div className={styles.scores}>\r\n                <ScoreUnit title=\"Clicks\" value={allClicks.length} />\r\n                <ScoreUnit title=\"Repeat Clicks\" value={repeatClicks} />\r\n                <ScoreUnit title=\"Matches\" value={`${matchFound} / 8`} />\r\n            </div>\r\n\r\n            <div className={styles.boxContainer}>\r\n                {\r\n                    cards.map((c, i) =>\r\n                        <Card key={i} card={c} onFlip={() => flipCard(i)} />\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            { \r\n                (screen === 'START') &&\r\n                <StartPage \r\n                    handleStart={e => startGame()} \r\n                />\r\n            }\r\n\r\n            { \r\n                (screen === 'END') &&\r\n                <EndModal \r\n                    handleStart={e => startGame()} \r\n                />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport { Game } from './pages'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}